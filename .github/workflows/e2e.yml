name: e2e
on:
  workflow_dispatch:
    inputs:
      url:
        description: deployed url
        required: true
  # workflow_run:
  #   workflows: [Build and Deploy to Vercel]
  #   types:
  #     - completed
jobs:
  # on-failure:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.workflow_run.conclusion == 'failure' }}
  #   steps:
  #     - run: echo 'Do nothing'
  e2e:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      # - name: "Download artifact"
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          run_id: context.payload.workflow_run.id,
      #       });
      #       let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
      #         return artifact.name == "pr_deployed_url"
      #       })[0];
      #       let download = await github.rest.actions.downloadArtifact({
      #          owner: context.repo.owner,
      #          repo: context.repo.repo,
      #          artifact_id: matchArtifact.id,
      #          archive_format: 'zip',
      #       });
      #       let fs = require('fs');
      #       fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_deployed_url.zip`, Buffer.from(download.data));

      # - name: "Unzip artifact"
      #   run: unzip pr_deployed_url.zip

      # - name: Set DEPLOYED_URL
      #   run: |
      #     cat ./pr_deployed_url
      #     echo "DEPLOYED_URL=$(cat ./pr_deployed_url)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      # - name: "Run e2e tests"
      #   run: |
      #     echo "Github Ref: ${{ github.ref }}"
      #     echo "url: ${{ github.event.inputs.url }}"
      #     git status
      #     ls
      # test the deployed site using
      # https://github.com/cypress-io/github-action
      - name: Cypress run üèÉ‚Äç‚ôÄÔ∏è
        uses: cypress-io/github-action@v4.1.1
        with:
          env: MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
          install: true
          browser: chrome
          headless: true
          record: true
          config: baseUrl=${{ github.event.inputs.url }}
          # command: npx cypress run --browser chrome --headless --config baseUrl=${{ github.event.inputs.url }} --env MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          # MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}

      # - name: Update Status ‚úÖ
      #   if: ${{ success() }}
      #   # set the merge commit status check
      #   # using GitHub REST API
      #   # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
      #   run: |
      #     curl --request POST \
      #     --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
      #     --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
      #     --header 'content-type: application/json' \
      #     --data '{
      #       "context": "E2E Tests",
      #       "state": "success",
      #       "description": "E2E tests passed",
      #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #     }'
      # - name: Update Status üö®
      #   if: ${{ failure() }}
      #   # set the merge commit status check
      #   # using GitHub REST API
      #   # see https://docs.github.com/en/rest/reference/repos#create-a-commit-status
      #   run: |
      #     curl --request POST \
      #     --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
      #     --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
      #     --header 'content-type: application/json' \
      #     --data '{
      #       "context": "E2E Tests",
      #       "state": "failure",
      #       "description": "E2E tests failed",
      #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      #     }'

name: e2e
on:
  workflow_run:
    workflows: [Build and Deploy to Vercel]
    types:
      - completed
jobs:
  e2e:
    runs-on: ubuntu-20.04
    steps:
      - name: "Download artifact"
        uses: actions/github-script@v5
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_deployed_url"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_deployed_url.zip`, Buffer.from(download.data));

      - name: "Unzip artifact"
        run: unzip pr_deployed_url.zip

      # - name: "Read the artifact"
      #   id: deploy-url
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       let fs = require('fs');
      #       const pr_deployed_url = fs.readFileSync('./pr_deployed_url');
      #       echo DEPLOYED_URL=${pr_deployed_url}

      - name: Set DEPLOYED_URL
        run: |
          cat ./pr_deployed_url
          echo "DEPLOYED_URL=$(cat ./pr_deployed_url)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      # test the deployed site using
      # https://github.com/cypress-io/github-action
      - name: Cypress run üèÉ‚Äç‚ôÄÔ∏è
        uses: cypress-io/github-action@v2
        with:
          install: true
          browser: chrome
          headless: true
          record: true
          command: npx cypress run --browser chrome --headless --config baseUrl=${{ env.DEPLOYED_URL }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

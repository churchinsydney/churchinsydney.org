name: Build and Deploy to Vercel
on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # if from a pull request, we need to checkout the PR branch

      - name: Get latest release with tag
        id: latest-release
        run: |
          echo "LATEST_RELEASE_TAG=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')" >> $GITHUB_ENV

      - name: Show environment variable
        run: |
          echo "Trigger by event: ${{ github.event_name }}"
          echo "Latest release tag: ${{ env.LATEST_RELEASE_TAG }}"
          echo "Git ref: ${{ github.ref_name }}"

      - name: Checkout latest release
        uses: actions/checkout@v3
      - run: |
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            git fetch --unshallow --tags
            git checkout tags/${{ env.LATEST_RELEASE_TAG }} -B latest-release-${{ env.LATEST_RELEASE_TAG }}
          else
            git checkout ${{ github.ref_name }}
          fi
          git symbolic-ref HEAD
          ls
      - name: ðŸ“¬ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn-lock.json') }}

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Is release
        run: |
          RELEASE=${{ github.event.release.tag_name }}
          if [ "$RELEASE" != "" || ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo "Production deployment"
            echo "PROD_BUILD=--prod" >> $GITHUB_ENV
          else
            echo "Preview deployment"
            echo "PROD_BUILD=" >> $GITHUB_ENV
          fi

      - name: ðŸ§° Install dependencies
        run: yarn

      - name: ðŸ“¦ Build project
        env:
          CMS_API_ENDPOINT: ${{ secrets.CMS_API_ENDPOINT }}
          CMS_API_USERNAME: ${{ secrets.CMS_API_USERNAME }}
          CMS_API_PASSWORD: ${{ secrets.CMS_API_PASSWORD }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          NEXT_PUBLIC_ANALYTICS_ID: ${{ secrets.NEXT_PUBLIC_ANALYTICS_ID }}
        run: npx vercel build ${{ env.PROD_BUILD }}

      - name: Deploy to Vercel Action
        id: vercel-deploy
        uses: zhex900/deploy-to-vercel-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ARGS: "--prebuilt"
          CREATE_COMMENT: true
          PRODUCTION: ${{ env.PROD_BUILD != '' }}

      - name: Save deployed url
        run: |
          mkdir -p ./pr
          echo ${{steps.vercel-deploy.outputs.PREVIEW_URL}} > ./pr/pr_deployed_url
      - uses: actions/upload-artifact@v2
        with:
          name: pr_deployed_url
          path: pr/
